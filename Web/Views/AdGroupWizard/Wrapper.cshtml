@*
    Wrapper for our advertisement creation page.
*@

@{
    // This should not render the side menu as we require the entire screen
    ViewData["RenderSideMenu"] = false;
}

<!-- Wrapper content -->
<main>

    <!-- TODO Debug: remove this class -->
    <div class="dashboard-content">

        <!-- Contains all our metadata functionality -->
        <div class="col-md-3">
            <partial name="_Sidebar" />
        </div>

        <!-- Contains our previews -->
        <div class="col-md-3">
            <partial name="_MidSection" />
        </div>

    </div>

    <!-- Image picker modal -->
    <div class="container centermodal">
        <div class="modal center fade modal-center" id="modalCenter" tabindex="-1" role="dialog" aria-labelledby="modalCenterLabel" aria-hidden="true">
            <div id="divModalImagePicker" class="modal-dialog" role="document">
                <!-- Modal content gets rendered here -->
                <partial name="~/Views/ImagePicker/_ImagePicker.cshtml" />
            </div>
        </div>
    </div>

</main>



@section Scripts {

    <!-- Load partial scripts  -->
    <!-- TODO Might be sub-optimal because the link is too explicit -->
    <partial name="~/Views/ImagePicker/_ImagePickerScripts.cshtml" />
    <partial name="_AdPreviewScripts" />

    <!-- Load validation rules -->
    <partial name="_AdGroupWizardValidationRules" />

    <script type="text/javascript">

        // Initialize our validator object
        setupValidatorDefaults();
        let validatorWizardAdGroup = $('#formWizardAdGroup').validate();

        $(document).ready(function () {

            // Setup button functionality
            subscribeClickable('#buttonBack', clickBack);
            subscribeClickable('#buttonSubmitWizardAdGroup', clickSave);
            subscribeClickable('.removeTitleEntry', clickDeleteTitleEntry);
            subscribeClickable('#addTitleEntry', clickAddTitleEntry);

        });

        // Takes us back to the previous browser page
        function clickBack() {
            history.back();
        }

        // Attempts to submit the form and gives user feedback
        // TODO Remove debug calls
        function clickSave() {
            if (validatorWizardAdGroup.form()) {
                let callbackSuccess = function () {
                    // TODO User popup
                    location.href = '@Url.Action(nameof(AdGroupOverviewController.Overview), "AdGroupOverview")';
                }
                let callbackFailure = function () {
                    // TODO User popup
                    $('.disableOnSubmitPending').removeAttr('disabled');
                }

                let url = $('#formWizardAdGroup').get(0).action;
                let body = $('#formWizardAdGroup').serializeFormJSON();

                // Make array if single, because our parser doesn't get this
                makeArrayIfSingleString(body, '@nameof(AdGroupFormViewModel.Titles)');
                makeArrayIfSingleString(body, '@nameof(AdGroupFormViewModel.ImageLinks)');

                // Disable after body creation
                $('.disableOnSubmitPending').attr('disabled', 'disabled');

                doPostAndProcess(url, body, callbackSuccess, [], callbackFailure, []);
            }
        }

        // When we add a text entry
        function clickAddTitleEntry() {
            doMethodAndProcess('@Url.Action("GetPartialView", "AdGroupWizard")', 'get', function (html) {
                $('#divTitleList').append(html);

                // TODO Circular reference sort of? Spaghetti?
                resubscribeTitleEntryBlurEvent();
            });
        }

        // When we delete a text entry
        function clickDeleteTitleEntry(event) {
            var id = $(event.target).attr('data-target-id');
            $('#' + id).remove();
        }

        // Shows the image picker popup modal
        function showImagePickerModal() {
            var div = $('#divModalImagePicker');
            // TODO Implement
            console.log('Function called to show image picker modal.')
        }

    </script>
}